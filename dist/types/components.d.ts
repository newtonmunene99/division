/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from './stencil.core';


export namespace Components {
  interface DivButton {
    'disabled': boolean;
    /**
    * Determines the buttons fill type. Default is `filled`
    */
    'fill': "clear" | "outline" | "filled";
    /**
    * Determines if the button is disabled because something is loading
    */
    'loading': boolean;
    /**
    * Determines if it's a raised button or flat button. Default is `raised`
    */
    'position': "raised" | "flat";
    /**
    * Determines if a button has rounded edges. Default is `default`
    */
    'shape': "round" | "default";
    /**
    * Determines the size of the button. Default is `default`
    */
    'size': "default" | "small" | "large";
    /**
    * This toggles the disabled state
    */
    'toggleDisabled': () => Promise<void>;
    /**
    * This toggles the loading state
    */
    'toggleLoading': () => Promise<void>;
    /**
    * Determines the button type. Default is `button`
    */
    'type': "button" | "submit" | "reset";
  }
  interface DivCard {}
}

declare global {


  interface HTMLDivButtonElement extends Components.DivButton, HTMLStencilElement {}
  var HTMLDivButtonElement: {
    prototype: HTMLDivButtonElement;
    new (): HTMLDivButtonElement;
  };

  interface HTMLDivCardElement extends Components.DivCard, HTMLStencilElement {}
  var HTMLDivCardElement: {
    prototype: HTMLDivCardElement;
    new (): HTMLDivCardElement;
  };
  interface HTMLElementTagNameMap {
    'div-button': HTMLDivButtonElement;
    'div-card': HTMLDivCardElement;
  }
}

declare namespace LocalJSX {
  interface DivButton extends JSXBase.HTMLAttributes<HTMLDivButtonElement> {
    'disabled'?: boolean;
    /**
    * Determines the buttons fill type. Default is `filled`
    */
    'fill'?: "clear" | "outline" | "filled";
    /**
    * Determines if the button is disabled because something is loading
    */
    'loading'?: boolean;
    /**
    * Emits when the button is clicked. The event is only emmitted if the button type is set to `button`. Otherwise, it either resets or submits if used inside a form and type is set to either `submit` or  `reset`
    */
    'onDivBtnClick'?: (event: CustomEvent<MouseEvent>) => void;
    /**
    * Determines if it's a raised button or flat button. Default is `raised`
    */
    'position'?: "raised" | "flat";
    /**
    * Determines if a button has rounded edges. Default is `default`
    */
    'shape'?: "round" | "default";
    /**
    * Determines the size of the button. Default is `default`
    */
    'size'?: "default" | "small" | "large";
    /**
    * Determines the button type. Default is `button`
    */
    'type'?: "button" | "submit" | "reset";
  }
  interface DivCard extends JSXBase.HTMLAttributes<HTMLDivCardElement> {}

  interface IntrinsicElements {
    'div-button': DivButton;
    'div-card': DivCard;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


